{"id":"src/apuntes.js","dependencies":[{"name":"C:\\Users\\Santiago\\DAW\\Verano\\Tutorial_Vue\\javascript-intro-introduccion-terminada\\javascript-intro-introduccion-terminada\\package.json","includedInParent":true,"mtime":1656523111301},{"name":"axios","loc":{"line":142,"column":18,"index":2898},"parent":"C:\\Users\\Santiago\\DAW\\Verano\\Tutorial_Vue\\javascript-intro-introduccion-terminada\\javascript-intro-introduccion-terminada\\src\\apuntes.js","resolved":"C:\\Users\\Santiago\\DAW\\Verano\\Tutorial_Vue\\javascript-intro-introduccion-terminada\\javascript-intro-introduccion-terminada\\node_modules\\axios\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar apiKey = '9SldW3E7UuJFvREhZkmt6vmXteIIRk1G';\nvar apiUrl = \"https://api.giphy.com/v1/gifs/random?api_key=\".concat(apiKey);\n\nvar apiGif = _axios.default.create({\n  baseURL: 'https://api.giphy.com/v1/gifs',\n  params: {\n    apiKey: apiKey\n  }\n}); // apiGif.get('/random')\n//   .then(res => {\n//     console.log(res);\n//     const {url} = res.data.data.images.original\n//     const img = document.createElement('img')\n//     img.src = url\n//     console.log(img);\n//     document.body.append(img)\n//   })\n// /////////////////\n// ///ASYNC AWAIT///\n// ////////////////\n\n\nvar getImg = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _yield$apiGif$get, data, url, img;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return apiGif.get('/random');\n\n          case 3:\n            _yield$apiGif$get = _context.sent;\n            data = _yield$apiGif$get.data;\n            url = data.data.images.original.url;\n            img = document.createElement('img');\n            img.src = url;\n            document.body.append(img);\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            throw _context.t0;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function getImg() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetImg(); //   //////////////////////\n//   / TERNARIO FULL NECK///\n// /////////////////////\n// let firstName\n// let lastName = 'Thevenet'\n// // console.log(`${firstName ||'No fist name'} ${lastName||'No last name'}`)\n// const isActive = true\n// const message = isActive ? 'Activo' : 'Inactivo'\n// console.log(message);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/apuntes.js","original":{"line":142,"column":0}},{"generated":{"line":9,"column":47},"source":"src/apuntes.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"src/apuntes.js","original":{"line":143,"column":0}},{"generated":{"line":15,"column":4},"source":"src/apuntes.js","original":{"line":143,"column":6},"name":"apiKey"},{"generated":{"line":15,"column":10},"source":"src/apuntes.js","original":{"line":143,"column":12}},{"generated":{"line":15,"column":13},"source":"src/apuntes.js","original":{"line":143,"column":15}},{"generated":{"line":15,"column":47},"source":"src/apuntes.js","original":{"line":143,"column":0}},{"generated":{"line":16,"column":0},"source":"src/apuntes.js","original":{"line":144,"column":0}},{"generated":{"line":16,"column":4},"source":"src/apuntes.js","original":{"line":144,"column":6},"name":"apiUrl"},{"generated":{"line":16,"column":10},"source":"src/apuntes.js","original":{"line":144,"column":12}},{"generated":{"line":16,"column":68},"source":"src/apuntes.js","original":{"line":144,"column":63},"name":"apiKey"},{"generated":{"line":16,"column":74},"source":"src/apuntes.js","original":{"line":144,"column":12}},{"generated":{"line":16,"column":75},"source":"src/apuntes.js","original":{"line":144,"column":0}},{"generated":{"line":18,"column":0},"source":"src/apuntes.js","original":{"line":146,"column":0}},{"generated":{"line":18,"column":4},"source":"src/apuntes.js","original":{"line":146,"column":6},"name":"apiGif"},{"generated":{"line":18,"column":10},"source":"src/apuntes.js","original":{"line":146,"column":12}},{"generated":{"line":18,"column":13},"source":"src/apuntes.js","original":{"line":146,"column":15},"name":"axios"},{"generated":{"line":18,"column":27},"source":"src/apuntes.js","original":{"line":146,"column":15}},{"generated":{"line":18,"column":28},"source":"src/apuntes.js","original":{"line":146,"column":21},"name":"create"},{"generated":{"line":18,"column":34},"source":"src/apuntes.js","original":{"line":146,"column":15}},{"generated":{"line":18,"column":35},"source":"src/apuntes.js","original":{"line":146,"column":28}},{"generated":{"line":19,"column":2},"source":"src/apuntes.js","original":{"line":147,"column":2},"name":"baseURL"},{"generated":{"line":19,"column":9},"source":"src/apuntes.js","original":{"line":147,"column":9}},{"generated":{"line":19,"column":11},"source":"src/apuntes.js","original":{"line":147,"column":11}},{"generated":{"line":19,"column":42},"source":"src/apuntes.js","original":{"line":146,"column":28}},{"generated":{"line":20,"column":2},"source":"src/apuntes.js","original":{"line":148,"column":2},"name":"params"},{"generated":{"line":20,"column":8},"source":"src/apuntes.js","original":{"line":148,"column":8}},{"generated":{"line":20,"column":10},"source":"src/apuntes.js","original":{"line":148,"column":10}},{"generated":{"line":21,"column":4},"source":"src/apuntes.js","original":{"line":149,"column":4},"name":"apiKey"},{"generated":{"line":21,"column":10},"source":"src/apuntes.js","original":{"line":149,"column":10}},{"generated":{"line":21,"column":12},"source":"src/apuntes.js","original":{"line":149,"column":12},"name":"apiKey"},{"generated":{"line":22,"column":2},"source":"src/apuntes.js","original":{"line":148,"column":10}},{"generated":{"line":23,"column":0},"source":"src/apuntes.js","original":{"line":146,"column":28}},{"generated":{"line":23,"column":1},"source":"src/apuntes.js","original":{"line":146,"column":15}},{"generated":{"line":23,"column":2},"source":"src/apuntes.js","original":{"line":146,"column":0}},{"generated":{"line":23,"column":4},"source":"src/apuntes.js","original":{"line":154,"column":0}},{"generated":{"line":24,"column":0},"source":"src/apuntes.js","original":{"line":155,"column":0}},{"generated":{"line":25,"column":0},"source":"src/apuntes.js","original":{"line":156,"column":0}},{"generated":{"line":26,"column":0},"source":"src/apuntes.js","original":{"line":157,"column":0}},{"generated":{"line":27,"column":0},"source":"src/apuntes.js","original":{"line":158,"column":0}},{"generated":{"line":28,"column":0},"source":"src/apuntes.js","original":{"line":159,"column":0}},{"generated":{"line":29,"column":0},"source":"src/apuntes.js","original":{"line":160,"column":0}},{"generated":{"line":30,"column":0},"source":"src/apuntes.js","original":{"line":161,"column":0}},{"generated":{"line":31,"column":0},"source":"src/apuntes.js","original":{"line":162,"column":0}},{"generated":{"line":32,"column":0},"source":"src/apuntes.js","original":{"line":169,"column":0}},{"generated":{"line":33,"column":0},"source":"src/apuntes.js","original":{"line":170,"column":0}},{"generated":{"line":34,"column":0},"source":"src/apuntes.js","original":{"line":171,"column":0}},{"generated":{"line":37,"column":0},"source":"src/apuntes.js","original":{"line":173,"column":0}},{"generated":{"line":37,"column":4},"source":"src/apuntes.js","original":{"line":173,"column":6},"name":"getImg"},{"generated":{"line":37,"column":10},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":38,"column":2},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":38,"column":72},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":39,"column":4},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":41,"column":4},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":42,"column":6},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":43,"column":8},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":44,"column":10},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":45,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":46,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":47,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":47,"column":19},"source":"src/apuntes.js","original":{"line":175,"column":25},"name":"apiGif"},{"generated":{"line":47,"column":25},"source":"src/apuntes.js","original":{"line":175,"column":31}},{"generated":{"line":47,"column":26},"source":"src/apuntes.js","original":{"line":175,"column":32},"name":"get"},{"generated":{"line":47,"column":29},"source":"src/apuntes.js","original":{"line":175,"column":25}},{"generated":{"line":47,"column":30},"source":"src/apuntes.js","original":{"line":175,"column":36}},{"generated":{"line":47,"column":39},"source":"src/apuntes.js","original":{"line":175,"column":25}},{"generated":{"line":47,"column":40},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":49,"column":10},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":50,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":51,"column":12},"source":"src/apuntes.js","original":{"line":175,"column":11},"name":"data"},{"generated":{"line":51,"column":16},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":51,"column":37},"source":"src/apuntes.js","original":{"line":175,"column":11},"name":"data"},{"generated":{"line":51,"column":41},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":52,"column":12},"source":"src/apuntes.js","original":{"line":176,"column":11},"name":"url"},{"generated":{"line":52,"column":15},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":52,"column":18},"source":"src/apuntes.js","original":{"line":176,"column":18},"name":"data"},{"generated":{"line":52,"column":22},"source":"src/apuntes.js","original":{"line":176,"column":22}},{"generated":{"line":52,"column":23},"source":"src/apuntes.js","original":{"line":176,"column":23},"name":"data"},{"generated":{"line":52,"column":27},"source":"src/apuntes.js","original":{"line":176,"column":18}},{"generated":{"line":52,"column":28},"source":"src/apuntes.js","original":{"line":176,"column":28},"name":"images"},{"generated":{"line":52,"column":34},"source":"src/apuntes.js","original":{"line":176,"column":18}},{"generated":{"line":52,"column":35},"source":"src/apuntes.js","original":{"line":176,"column":35},"name":"original"},{"generated":{"line":52,"column":43},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":52,"column":44},"source":"src/apuntes.js","original":{"line":176,"column":11},"name":"url"},{"generated":{"line":52,"column":47},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":53,"column":12},"source":"src/apuntes.js","original":{"line":178,"column":10},"name":"img"},{"generated":{"line":53,"column":15},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":53,"column":18},"source":"src/apuntes.js","original":{"line":178,"column":16},"name":"document"},{"generated":{"line":53,"column":26},"source":"src/apuntes.js","original":{"line":178,"column":24}},{"generated":{"line":53,"column":27},"source":"src/apuntes.js","original":{"line":178,"column":25},"name":"createElement"},{"generated":{"line":53,"column":40},"source":"src/apuntes.js","original":{"line":178,"column":16}},{"generated":{"line":53,"column":41},"source":"src/apuntes.js","original":{"line":178,"column":39}},{"generated":{"line":53,"column":46},"source":"src/apuntes.js","original":{"line":178,"column":16}},{"generated":{"line":53,"column":47},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":54,"column":12},"source":"src/apuntes.js","original":{"line":180,"column":4},"name":"img"},{"generated":{"line":54,"column":15},"source":"src/apuntes.js","original":{"line":180,"column":7}},{"generated":{"line":54,"column":16},"source":"src/apuntes.js","original":{"line":180,"column":8},"name":"src"},{"generated":{"line":54,"column":19},"source":"src/apuntes.js","original":{"line":180,"column":4}},{"generated":{"line":54,"column":22},"source":"src/apuntes.js","original":{"line":180,"column":14},"name":"url"},{"generated":{"line":54,"column":25},"source":"src/apuntes.js","original":{"line":180,"column":4}},{"generated":{"line":55,"column":12},"source":"src/apuntes.js","original":{"line":182,"column":4},"name":"document"},{"generated":{"line":55,"column":20},"source":"src/apuntes.js","original":{"line":182,"column":12}},{"generated":{"line":55,"column":21},"source":"src/apuntes.js","original":{"line":182,"column":13},"name":"body"},{"generated":{"line":55,"column":25},"source":"src/apuntes.js","original":{"line":182,"column":4}},{"generated":{"line":55,"column":26},"source":"src/apuntes.js","original":{"line":182,"column":18},"name":"append"},{"generated":{"line":55,"column":32},"source":"src/apuntes.js","original":{"line":182,"column":4}},{"generated":{"line":55,"column":33},"source":"src/apuntes.js","original":{"line":182,"column":25},"name":"img"},{"generated":{"line":55,"column":36},"source":"src/apuntes.js","original":{"line":182,"column":4}},{"generated":{"line":56,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":57,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":59,"column":10},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":60,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":61,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":62,"column":12},"source":"src/apuntes.js","original":{"line":187,"column":4},"name":"console"},{"generated":{"line":62,"column":19},"source":"src/apuntes.js","original":{"line":187,"column":11}},{"generated":{"line":62,"column":20},"source":"src/apuntes.js","original":{"line":187,"column":12},"name":"log"},{"generated":{"line":62,"column":23},"source":"src/apuntes.js","original":{"line":187,"column":4}},{"generated":{"line":63,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":65,"column":10},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":66,"column":10},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":67,"column":12},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":68,"column":8},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":69,"column":6},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":70,"column":4},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":71,"column":2},"source":"src/apuntes.js","original":{"line":173,"column":15}},{"generated":{"line":71,"column":3},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":73,"column":2},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":73,"column":18},"source":"src/apuntes.js","original":{"line":173,"column":6},"name":"getImg"},{"generated":{"line":73,"column":24},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":74,"column":4},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":75,"column":2},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":76,"column":0},"source":"src/apuntes.js","original":{"line":173,"column":12}},{"generated":{"line":76,"column":3},"source":"src/apuntes.js","original":{"line":173,"column":0}},{"generated":{"line":78,"column":0},"source":"src/apuntes.js","original":{"line":192,"column":0},"name":"getImg"},{"generated":{"line":78,"column":6},"source":"src/apuntes.js","original":{"line":192,"column":6}},{"generated":{"line":78,"column":10},"source":"src/apuntes.js","original":{"line":194,"column":0}},{"generated":{"line":79,"column":0},"source":"src/apuntes.js","original":{"line":195,"column":0}},{"generated":{"line":80,"column":0},"source":"src/apuntes.js","original":{"line":196,"column":0}},{"generated":{"line":81,"column":0},"source":"src/apuntes.js","original":{"line":198,"column":0}},{"generated":{"line":82,"column":0},"source":"src/apuntes.js","original":{"line":199,"column":0}},{"generated":{"line":83,"column":0},"source":"src/apuntes.js","original":{"line":201,"column":0}},{"generated":{"line":84,"column":0},"source":"src/apuntes.js","original":{"line":203,"column":0}},{"generated":{"line":85,"column":0},"source":"src/apuntes.js","original":{"line":204,"column":0}},{"generated":{"line":86,"column":0},"source":"src/apuntes.js","original":{"line":206,"column":0}}],"sources":{"src/apuntes.js":"// ///////////////////////\r\n// OPERADOR SPREAD Y MAP//\r\n// //////////////////////\r\n\r\n// let array1 = [1, 2, 3, 4, 5]\r\n// let array2 = [...array1]\r\n// array2.push(6)\r\n// array3 = array1.map(i => i * 2)\r\n// console.log(array1);\r\n// console.log(array2);\r\n// console.log(array3);\r\n\r\n\r\n// ///////////////////\r\n// DESESTRUCTURACION//\r\n// //////////////////\r\n\r\n// const heroes = [{\r\n//   id: 1,\r\n//   name: 'batman'\r\n// }, {\r\n//   id: 2,\r\n//   name: 'superman'\r\n// }]\r\n\r\n// const existe = heroes.some(heroe => heroe.id === 2)\r\n// console.log(existe);\r\n\r\n// const existe = heroes.find(heroe => heroe.id === 2)\r\n// console.log(existe.name);\r\n\r\n// const { name, id } = heroes.find(heroe => heroe.id === 1)\r\n// console.log(name);\r\n\r\n\r\n// ///////////////////////////////\r\n// DESESTRUCTURACION DE OBJETOS//\r\n// //////////////////////////////\r\n\r\n// const person = {\r\n//   name: 'santi',\r\n//   age: 45,\r\n//   codeName: 'Ironman'\r\n// }\r\n\r\n// const { age, name, codeName, power = 'No tiene poder' } = person\r\n\r\n// const createHero = ({ id, name, power }) => {\r\n//   return {\r\n//     id: 1123123,\r\n//     name,\r\n//     power: 123,\r\n//     codeName: 'El alpha',\r\n//     power\r\n\r\n//   }\r\n// }\r\n\r\n// console.log(createHero(person))\r\n\r\n\r\n\r\n// /////////////////////////////\r\n// DESESTRUCTURACION DE ARRAYS//\r\n// ////////////////////////////\r\n\r\n// const charcater = ['vegeta', 'goku', 'dios']\r\n\r\n// const [v, g, d] = charcater\r\n// const [v, ,] = charcater\r\n\r\n\r\n// const returnArray = () => ['ABC', 123]\r\n// const [letras, numeros] = returnArray()\r\n\r\n// console.log(letras, numeros);\r\n\r\n\r\n\r\n// ////////////\r\n// PROMESAS //\r\n// ///////////\r\n\r\n// console.log('Inicio');\r\n\r\n// new Promise((resolve, reject) => {\r\n//   console.log('Cuerpo de la promesa');\r\n//   resolve('Promesa resuelta')\r\n//   // reject('Promesa resuelta con error')\r\n// })\r\n//   // .then(res => console.log(res))\r\n//   .catch(err => console.log(err))\r\n\r\n// console.log('Fin');\r\n\r\n\r\n\r\n// //////////////////////////\r\n// ARGUMENTOS DE PROMESAS //\r\n// //////////////////////////\r\n\r\n// import { getHeroById } from './bases/08-imp-exp'\r\n\r\n// const getHeroByIdAsync = (id) => {\r\n//   return new Promise((resolve, reject) => {\r\n//     setTimeout(() => {\r\n//       const heroe = getHeroById(id)\r\n//         if (heroe) {\r\n//           resolve(heroe)\r\n//         } else {\r\n//           reject(console.log('error'))\r\n//         }\r\n//     },1000)\r\n//   })\r\n// }\r\n\r\n// getHeroByIdAsync(1)\r\n//   .then(res => console.log(res))\r\n//   .catch(err=> console.log(err))\r\n\r\n\r\n// ////////////\r\n// FETCH API//\r\n// ///////////\r\n\r\n// const apiKey = '9SldW3E7UuJFvREhZkmt6vmXteIIRk1G'\r\n\r\n// const apiUrl = `https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`\r\n\r\n// fetch(apiUrl)\r\n//   .then(res => res.json())\r\n//   .then(({ data }) => {\r\n//     const { url } = data.images.original\r\n//   })\r\n\r\n\r\n\r\n//   ///////////////\r\n//   / AXIOS   ///\r\n// //////////////\r\n\r\nimport axios from \"axios\";\r\nconst apiKey = '9SldW3E7UuJFvREhZkmt6vmXteIIRk1G'\r\nconst apiUrl = `https://api.giphy.com/v1/gifs/random?api_key=${apiKey}`\r\n\r\nconst apiGif = axios.create({\r\n  baseURL: 'https://api.giphy.com/v1/gifs',\r\n  params: {\r\n    apiKey: apiKey\r\n  }\r\n})\r\n\r\n\r\n// apiGif.get('/random')\r\n//   .then(res => {\r\n//     console.log(res);\r\n//     const {url} = res.data.data.images.original\r\n//     const img = document.createElement('img')\r\n//     img.src = url\r\n//     console.log(img);\r\n//     document.body.append(img)\r\n//   })\r\n\r\n\r\n\r\n\r\n\r\n\r\n// /////////////////\r\n// ///ASYNC AWAIT///\r\n// ////////////////\r\n\r\nconst getImg = async() =>{\r\n  try {\r\n    const {data} = await apiGif.get('/random')\r\n    const {url} = data.data.images.original\r\n\r\n    const img = document.createElement('img')\r\n    \r\n    img.src = url\r\n\r\n    document.body.append(img)\r\n\r\n\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n    throw error\r\n  }\r\n}\r\n\r\ngetImg()\r\n\r\n//   //////////////////////\r\n//   / TERNARIO FULL NECK///\r\n// /////////////////////\r\n\r\n// let firstName\r\n// let lastName = 'Thevenet'\r\n\r\n// // console.log(`${firstName ||'No fist name'} ${lastName||'No last name'}`)\r\n\r\n// const isActive = true\r\n// const message = isActive ? 'Activo' : 'Inactivo'\r\n\r\n// console.log(message);"},"lineCount":null}},"error":null,"hash":"8b87cd6f0042eadd8f6d950705adc874","cacheData":{"env":{}}}